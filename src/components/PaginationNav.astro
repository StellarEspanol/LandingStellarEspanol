---
// Obtenemos la URL actual
const currentPath = Astro.url.pathname;

// Definimos el mapa de navegación basado en la estructura del sidebar
// Este array contiene todas las rutas en el orden en que aparecen en el sidebar
const navigationMap = [
  // Inicio
  "/soroban/inicio",
  
  // Instalación
  "/instalacion/rust",
  "/instalacion/cliente-stellar",
  "/instalacion/nvm",
  "/instalacion/node-js",
  "/instalacion/ide",
  
  // Cliente Stellar
  "/cliente-stellar/primer-paso",
  "/cliente-stellar/segundo-paso",
  
  // Contenido Soroban
  "/soroban/datos-primitivos",
  "/soroban/string",
  "/soroban/sentencias-condicionales",
  "/soroban/estructuras-de-datos",
  "/soroban/loops",
  "/soroban/funciones",
  "/soroban/nft",
  "/soroban/pruebas",
  
  // Ejemplos
  "/ejemplos/hello-world",
  "/ejemplos/get-set-hello-world",
  "/ejemplos/counter",
  
  // Components
  "/components/accordion",
  "/components/button",
  "/components/checkbox",
  "/components/icon",
  "/components/input",
  "/components/modal",
  "/components/radio",
  "/components/select",
  "/components/switch",
  "/components/tab",
  "/components/textarea",
  "/components/theme-switch",
  
  // Resources
  "/resources/available-icons"
];

// Encontrar el índice de la página actual
const currentIndex = navigationMap.findIndex(path => path === currentPath);

// Determinar la página anterior y siguiente
const prevPage = currentIndex > 0 ? navigationMap[currentIndex - 1] : null;
const nextPage = currentIndex < navigationMap.length - 1 ? navigationMap[currentIndex + 1] : null;

// Función para obtener el título de la página a partir de su ruta
function getPageTitle(path: string | null): string {
  if (!path) return "";
  
  // Obtener la última parte de la ruta y convertirla a título
  const lastSegment = path.split('/').pop() || "";
  return lastSegment
    .split('-')
    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');
}

// Obtener el título de la sección (el primer segmento después de /)
function getSectionTitle(path: string | null): string {
  if (!path) return "";
  
  const segments = path.split('/');
  if (segments.length >= 2) {
    const sectionName = segments[1];
    return sectionName.charAt(0).toUpperCase() + sectionName.slice(1);
  }
  return "";
}

const prevPageTitle = getPageTitle(prevPage);
const prevPageSection = getSectionTitle(prevPage);
const nextPageTitle = getPageTitle(nextPage);
const nextPageSection = getSectionTitle(nextPage);
---

{(prevPage || nextPage) && (
  <div class="mt-16 flex justify-between">
    <div class="w-full bg-gradient-to-r from-primary/50 to-secondary/50 rounded-lg p-px shadow-sm">
      <div class="bg-neutral-100/90 rounded-lg overflow-hidden">
        <div class="flex divide-x divide-neutral-300/50">
          {prevPage ? (
            <a href={prevPage} class="flex-1 p-4 hover:bg-neutral-100/30 transition-colors flex items-center justify-start gap-2 text-primary">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="m15 18-6-6 6-6"/>
              </svg>
              <div class="flex flex-col items-start">
                <div class="text-xs text-neutral-500">Anterior</div>
                <div class="font-medium">{prevPageTitle}</div>
                {prevPageSection && <div class="text-xs text-neutral-500">{prevPageSection}</div>}
              </div>
            </a>
          ) : (
            <div class="flex-1"></div>
          )}
          
          {nextPage && (
            <a href={nextPage} class="flex-1 p-4 hover:bg-neutral-100/30 transition-colors flex items-center justify-end gap-2 text-primary">
              <div class="flex flex-col items-end">
                <div class="text-xs text-neutral-500">Siguiente</div>
                <div class="font-medium">{nextPageTitle}</div>
                {nextPageSection && <div class="text-xs text-neutral-500">{nextPageSection}</div>}
              </div>
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="m9 18 6-6-6-6"/>
              </svg>
            </a>
          )}
        </div>
      </div>
    </div>
  </div>
)}
